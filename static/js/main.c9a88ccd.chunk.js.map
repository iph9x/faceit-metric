{"version":3,"sources":["components/Footer/Footer.jsx","components/Header/Header.jsx","api/instanceElo.js","api/api.js","redux/player/actions.js","redux/player/consts.js","components/Preloader/Preloader.jsx","components/PlayerCard/PlayerCard.jsx","components/MatchList/MatchList.jsx","assets/js/utils.js","components/MatchItem/MatchItem.jsx","components/LineChart/LineChart.jsx","components/AvgStatItem/AvgStatItem.jsx","pages/Comparison/Comparison.jsx","components/RoomPlayerItem/RoomPlayerItem.jsx","components/RoomCaptions/RoomCaptions.jsx","pages/CheckRoom/CheckRoom.jsx","redux/room/actions.js","redux/room/consts.js","pages/Main/Main.jsx","redux/match/actions.js","redux/match/consts.js","route/AppRouter.jsx","App.js","serviceWorker.js","redux/player/reducer.js","redux/match/reducer.js","redux/room/reducer.js","redux/redux-store.js","index.js"],"names":["Footer","className","target","rel","href","onClick","e","newPageUrl","preventDefault","window","open","onClickHandler","Header","to","instanceElo","axios","headers","baseURL","interceptors","request","use","config","response","error","status","console","toString","log","Promise","reject","path","get","getSearchResultSuccess","playerStats","playerInfo","type","getSearchResultFailure","Preloader","icon","faSpinner","PlayerCard","nickname","avatar","level","elo","matches","kd","hs","winRate","maxElo","bgColor","classNames","src","alt","MatchList","matchesArr","secToDate","secs","startTime","Date","setTime","getDate","getMonth","getHours","getMinutes","calcStatsForNGames","sumStats","kr","frags","winrate","size","length","i","Number","parseFloat","c2","c3","i6","c4","i10","toFixed","Math","floor","MatchItem","match","eloDif","setMatchId","setShowMatches","bgClass","match__item","matchId","i1","split","pop","i5","i18","i7","i8","created_at","isNaN","LineChart","eloArr","data","labels","numsChart","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointBorderWidth","options","maintainAspectRatio","animation","duration","AvgStatItem","gamesCount","Comparison","RoomPlayerItem","numTeamStats","player","gameSkillLevel","history","useHistory","push","pathname","search","i9","i14","i15","i16","RoomCaptions","CheckRoom","roomId","dispatch","useDispatch","useState","team1Roster","setTeam1Roster","team2Roster","setTeam2Roster","team1Class","setTeam1Class","team2Class","setTeam2Class","useSelector","state","roomPage","teamsInfo","teamsStats","isFetching","useEffect","a","API","teamsResponse","teamsStatsResponse","payload","getTeamsThunkCreator","team1Stats","teams","players","team2Stats","createArr","faction1","roster","faction2","setClassForTeam","parseInt","c5","team","map","key","id","str","entTime","slice","parseEndTime","checkIn","endTime","i3","i4","Main","store","playerSearch","matchesList","allMatches","matchFetching","playerAvatar","skill_level","faceit_elo","playerId","useLocation","globalFetching","setGlobalFetching","value","setValue","currentUrl","setCurrentUrl","setMatchesArr","setEloArr","setNumsChart","listSize","setListSize","setMaxElo","setMatchesBySize","showProfile","setProfile","showChart","setShowChart","showCompare","setShowCompare","showMatches","searchAndNickMatch","toLowerCase","currentNick","URLSearchParams","getUserIdBySearch","userId","results","guid","userNickname","searchResponse","statResponse","games","csgo","lifetime","getPlayerIdThunkCreator","matchesCount","allMatchesResopnse","getMatchesThunkCreator","m1","maxEloArr","maxEloReturn","filter","item","max","newArrFull","currentEloArr","nums","undefined","reverse","arrOfElMatches","index","btnNavClassProfile","btn","btnNavClassChart","btnNavClassCompare","onSubmit","autoComplete","autoCorrect","spellCheck","placeholder","onChange","disabled","faSearch","k5","k8","k6","AppRouter","exact","component","App","Boolean","location","hostname","initialState","comparisonPlayers","playerReducer","action","matchesReducer","roomReducer","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c9a88ccd.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../../assets/scss/footer.scss';\n\nfunction Footer() {\n    const onClickHandler = (e, newPageUrl) => {\n        e.preventDefault();\n        window.open(newPageUrl, \"_blank\")\n    }\n    return (\n        <footer className=\"footer\">\n            <div>\n                by&nbsp;\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://vk.com/iph9x\" \n                onClick={(e) => onClickHandler(e, 'https://vk.com/iph9x')}>\n                    Ivan\n                </a>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../assets/scss/header.scss';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header__container\">\n                <Link to=\"/faceit-metric/\"><h1>FACEIT METRIC</h1></Link>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import * as axios from \"axios\";\n\nconst API_URL= \"https://api.faceit.com/\";\n// https://api.faceit.com/core/v1/nicknames/IPhoenix9\n// stats/api/v1/stats/time/users/\nconst instanceElo = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: API_URL,\n});\n\ninstanceElo.interceptors.request.use((config) => {  \n  return config;\n});\n\ninstanceElo.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const status = error.response ? error.response.status : 408;\n    if (status >= 500) {\n      window.console.error(error.toString());\n    }\n    if (status === 401) {\n      window.console.log(\"logout\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instanceElo;\n","import instanceElo from \"./instanceElo\";\n// import instanceAuth from \"./instanceAuth\";\n\nexport default {\n  // GET_V4(path) {\n  //   return instanceAuth.get(path);\n  // },\n  GET_ELO(path) {\n    return instanceElo.get(path);\n  }\n};\n","import API from \"../../api/api\";\nimport {\n    GET_SEARCH_RESULT_SUCCESS,\n    GET_SEARCH_RESULT_REQUEST,\n\tGET_SEARCH_RESULT_FAILURE,\n\tGET_COMPARISON_LIST_REQUEST,\n\tGET_COMPARISON_LIST_SUCCESS,\n\tGET_COMPARISON_LIST_FAILURE\n} from \"./consts\";\n\n// GET SEARCH RESULT\n\nexport const getSearchResultRequest = () => ({ type: GET_SEARCH_RESULT_REQUEST });\nexport const getSearchResultSuccess = (playerStats, playerInfo) => ({\n\ttype: GET_SEARCH_RESULT_SUCCESS,\n\tplayerStats,\n\tplayerInfo\n});\nexport const getSearchResultFailure = (error) => ({\n\ttype: GET_SEARCH_RESULT_FAILURE,\n\terror,\n});\n\nexport const getPlayerIdThunkCreator = (nickname) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getSearchResultRequest());\n\n\t\ttry {\n\t\t\tconst getUserIdBySearch = await API.GET_ELO(`search/v1?limit=1&query=${nickname}`);\n\t\t\tconst userId = getUserIdBySearch.data.payload.players.results[0].guid;\n\t\t\tconst userNickname = getUserIdBySearch.data.payload.players.results[0].nickname;\n\n\t\t\tconst searchResponse = await API.GET_ELO(`core/v1/nicknames/${userNickname}`);\n\t\t\t\t\n\t\t\tconst statResponse = await API.GET_ELO(`stats/v1/stats/users/${userId}/games/csgo`);\n\t\t\tconst playerStats = searchResponse.data.payload;\n\n\t\t\tconst playerInfo = {\n\t\t\t\tplayerAvatar: playerStats.avatar,\n\t\t\t\tskill_level: playerStats.games.csgo.skill_level,\n\t\t\t\tfaceit_elo: playerStats.games.csgo.faceit_elo,\n\t\t\t\tnickname: userNickname,\n\t\t\t\tplayerId: userId\n\t\t\t};\n\t\t\tdispatch(getSearchResultSuccess(statResponse.data.lifetime, playerInfo));\n\n\n\t\t} catch (error) {\n\t\t\tdispatch(getSearchResultFailure(error));\n\t\t}\n\t};\n};\n\n// SET COMPARISON OBJ\n\nexport const setComparisonPlayersRequest = () => ({ type: GET_COMPARISON_LIST_REQUEST });\nexport const setComparisonPlayersSuccess = (comparisonPlayers) => ({\n\ttype: GET_COMPARISON_LIST_SUCCESS,\n\tcomparisonPlayers\n});\nexport const setComparisonPlayersFailure = (error) => ({\n\ttype: GET_COMPARISON_LIST_FAILURE,\n\terror,\n});\n\nexport const setComparisonPlayersThunkCreator = (comparisonPlayers) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getSearchResultRequest());\n\t\ttry {\t\t\n\t\t\tdispatch(getSearchResultSuccess(comparisonPlayers));\n\t\t} catch (error) {\n\t\t\tdispatch(getSearchResultFailure(error));\n\t\t}\n\t};\n};","export const GET_SEARCH_RESULT_SUCCESS = \"GET_SEARCH_RESULT_SUCCESS\";\nexport const GET_SEARCH_RESULT_REQUEST = \"GET_SEARCH_RESULT_REQUEST\";\nexport const GET_SEARCH_RESULT_FAILURE = \"GET_SEARCH_RESULT_FAILURE\";\n\nexport const GET_COMPARISON_LIST_REQUEST = \"GET_COMPARISON_LIST_REQUEST\";\nexport const GET_COMPARISON_LIST_SUCCESS = \"GET_COMPARISON_LIST_SUCCESS\";\nexport const GET_COMPARISON_LIST_FAILURE = \"GET_COMPARISON_LIST_FAILURE\";","import React from 'react';\n\nimport '../../assets/scss/preloader.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nfunction Preloader() {\n    return (\n        <div className=\"preloader-wrapper\">\n            <div className=\"preloader\">\n                <FontAwesomeIcon icon={faSpinner} />\n            </div>\n        </div>\n    );\n}\n\nexport default Preloader;\n","import React from 'react';\n\nimport classNames from 'classnames';\n\n\nfunction PlayerCard({nickname, avatar, level, elo, matches, kd, hs, winRate, maxElo}) {\n    const bgColor = classNames({\n        'player-card__bg': true,\n        'player-card__bg_red': level === 10,\n        'player-card__bg_orange': level >= 8 && level <= 9,\n        'player-card__bg_yellow': level >= 4 && level <= 7,\n        'player-card__bg_green': level >= 2 && level <= 3,\n        'player-card__bg_white': level === 1\n    });\n    return (<>    \n        <div className=\"player-card player-card__avatar-box\">\n            <div className=\"player-card__nickname\">{nickname}</div>\n            <div className={bgColor}>.</div>\n            <img className=\"player-card__avatar\"  src={avatar} alt=\"\"/>\n        </div>\n        <div className=\"player-card player-card__alltime-box\">\n            <div className=\"player-card__avg-title\">\n                Statistic for alltime\n            </div>\n            <div className=\"player-card__stat-box\">\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Level: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {level}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Elo: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {elo}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Max Elo: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {maxElo}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        matches: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {matches}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/D Ratio: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kd}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg hs:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {hs}%\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        win rate: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {winRate}%\n                    </div>\n                </div>\n            </div>\n        </div>       \n    </>\n    );\n}\n\nexport default PlayerCard;\n","import React from 'react';\n\nfunction MatchList({\n    matches,\n    matchesArr\n}) {\n    return (       \n        <div className=\"match__wrapper\">\n            {matches && (\n                <div className=\"match__item-titles\">\n                    <div>map</div>\n                    <div>team</div>\n                    <div>score</div>\n                    <div>kd</div>\n                    <div>hs</div>\n                    <div>K</div>\n                    <div>A</div>\n                    <div>D</div>\n                    <div>date</div>\n                    <div>elo</div>\n                </div>\n            )}\n            {matches && matchesArr}\n        </div>           \n    );\n}\n\nexport default MatchList;\n","export const secToDate = (secs) => {\n    const startTime = new Date(null); \n    startTime.setTime(secs);\n    const outString = `\n        ${startTime.getDate() < 10 ? `0${startTime.getDate()}` : startTime.getDate()}.${startTime.getMonth() < 10 ? `0${startTime.getMonth() + 1}` : startTime.getMonth() + 1} - ${startTime.getHours() < 10 ? `0${startTime.getHours()}` : startTime.getHours()}:${startTime.getMinutes() < 10 ? `0${startTime.getMinutes()}` : startTime.getMinutes()}`;\n    return outString;\n}\n\nexport const calcStatsForNGames = (matches) => {\n    let sumStats = {\n        kd: 0,\n        kr: 0,\n        hs: 0,\n        frags: 0,\n        winrate: 0,\n    };\n\n    const size = matches.length;\n\n    for (let i = 0; i < size; i += 1) {\n        sumStats.kd += Number.parseFloat(matches[i].c2);\n        sumStats.kr += Number.parseFloat(matches[i].c3);\n        sumStats.frags += Number.parseFloat(matches[i].i6);\n        sumStats.hs += Number.parseFloat(matches[i].c4);\n        sumStats.winrate += Number.parseFloat(matches[i].i10);\n    }\n    let avgStats = {\n        kd: Number.parseFloat((sumStats.kd / size).toFixed(2)),\n        kr: Number.parseFloat((sumStats.kr / size).toFixed(2)),\n        hs: Math.floor(sumStats.hs / size),\n        frags: Math.floor(sumStats.frags / size),\n        winrate: Math.floor(sumStats.winrate / size * 100) ,\n    }\n    return avgStats;\n}","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { secToDate } from '../../assets/js/utils';\n\nfunction MatchItem({ match, eloDif, setMatchId, setShowMatches }) {\n    const bgClass = classNames({\n        match__item: true,\n        'match__win': match.i10 === '1',\n        'match__lose': match.i10 === '0'\n    });\n\n    return (\n        <div onClick={() => {\n            setMatchId(match.matchId);\n            setShowMatches(false)\n        }}\n            className={bgClass}\n        >\n            <div>{match.i1.split('/').pop()}</div>\n            <div>{match.i5}</div>\n            <div>{match.i18}</div>\n            <div>{match.c2}</div>\n            <div>{match.c4}%</div>\n            <div>{match.i6}</div>\n            <div>{match.i7}</div>\n            <div>{match.i8}</div>\n            <div>{secToDate(match.created_at)}</div>\n            <div>{`${match.elo ? match.elo : '(+0)'} ${eloDif ? `(${Number.isNaN(eloDif) ? \"+0\" : (eloDif > 0 ? `+${eloDif}` : eloDif)})` : `` }`}</div>\n        </div>\n    );\n}\n\nexport default MatchItem;\n","import React  from 'react';\n\nimport { Line } from 'react-chartjs-2';\n\nimport '../../assets/scss/chart.scss';\n\nfunction LineChart({ eloArr, numsChart }) {\n    const data = {\n        labels: numsChart,\n        datasets: [\n            {\n                label: 'elo',\n                data: eloArr,\n                backgroundColor: [\n                    '#2666c75e'\n                ],\n                borderColor: [\n                    '#2666c7'\n                ],\n                borderWidth: 4,\n                pointBackgroundColor: '#fff',\n                pointBorderColor: 'rgba(60, 161, 219, 0.5)',\n                pointBorderWidth: 1,\n            }\n        ]\n    }\n\n    return (\n        <div className=\"chart\">\n            <Line data={data} options={{ maintainAspectRatio: false, animation: { duration: 0} }} />\n        </div>\n    )\n}\n\nexport default LineChart;\n","import React from 'react';\n\nfunction AvgStatItem ({matches, gamesCount}) {\n    const {kd, kr, hs, frags, winrate} = matches;\n\n    return (    \n        <div className=\"player-card player-card__avg-box\">\n            <div className=\"player-card__avg-title\">\n                Statistic for {gamesCount} games\n            </div>\n            <div className=\"player-card__stat-box\">\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg frags: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {frags}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/D: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kd}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/R: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kr}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg hs:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {hs}%\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        win rate:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {winrate}%\n                    </div>\n                </div>\n                \n            </div>\n        </div>             \n    );\n}\n\nexport default AvgStatItem;\n","import React  from 'react';\n\nimport '../../assets/scss/comparison.scss';\n\nfunction Comparison() {\n    return (        \n        <div className=\"comparison\">\n            so far empty :(\n        </div>           \n    );\n}\n\nexport default Comparison;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction RoomPlayerItem ({ numTeamStats, player, i, setShowMatches }) {\n    const {nickname, gameSkillLevel, elo, avatar } = player;\n\n    const history = useHistory();\n\n    const clickHandler = () => {\n        history.push({\n            pathname: '/faceit-metric/',\n            search: `?nickname=${nickname}`\n        });\n\n        setShowMatches(true);\n    }\n\n    return (    \n        <div className=\"player-wrapper\" onClick={clickHandler}>\n            <img className=\"player__avatar player__js-start\" src={avatar} alt=\"\" />\n            <div className=\"player__info player__js-start\">\n                {nickname}\n            </div>\n            <div className=\"player__info\">\n                {gameSkillLevel}\n            </div>\n            <div className=\"player__info\">\n                {elo}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i6}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i7}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i8}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].c2}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].c3}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].c4}%\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i9}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i14}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i15}\n            </div>\n            <div className=\"player__info\">\n                {numTeamStats[i].i16}\n            </div>\n        </div>            \n    );\n}\n\nexport default RoomPlayerItem;\n","import React from 'react';\n\nfunction RoomCaptions () {\n    return (    \n        <div className=\"player-wrapper player-captions\">\n            <div className=\"player-captions__header\">\n            </div>\n            <div className=\"player-captions__header player__js-start\">\n                Player\n            </div>\n            <div className=\"player-captions__header\">\n                Level\n            </div>\n            <div className=\"player-captions__header\">\n                Elo\n            </div>\n            <div className=\"player-captions__header\">\n                K\n            </div>\n            <div className=\"player-captions__header\">\n                A\n            </div>\n            <div className=\"player-captions__header\">\n                D\n            </div>\n            <div className=\"player-captions__header\">\n                K/D\n            </div>\n            <div className=\"player-captions__header\">\n                K/R\n            </div>\n            <div className=\"player-captions__header\">\n                Headshot\n            </div>\n            <div className=\"player-captions__header\">\n                MVPs\n            </div>\n            <div className=\"player-captions__header\">\n                3k\n            </div>\n            <div className=\"player-captions__header\">\n                4k\n            </div>\n            <div className=\"player-captions__header\">\n                5k\n            </div>\n        </div>     \n    );\n}\n\nexport default RoomCaptions;\n","import React, { useState }  from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport classNames from 'classnames';\n\nimport { getTeamsThunkCreator } from '../../redux/room/actions';\n\nimport Preloader from '../../components/Preloader/Preloader';\n\nimport '../../assets/scss/checkRoom.scss';\nimport RoomPlayerItem from '../../components/RoomPlayerItem/RoomPlayerItem';\nimport RoomCaptions from '../../components/RoomCaptions/RoomCaptions';\n\nconst CheckRoom = ({roomId, setShowMatches}) => {\n    const dispatch = useDispatch();\n\n    \n    // const [value, setValue] = useState('');\n    // const [roomId, setRoomId] = useState('');\n    const [team1Roster, setTeam1Roster] = useState(null);\n    const [team2Roster, setTeam2Roster] = useState(null);\n    const [team1Class, setTeam1Class] = useState('');\n    const [team2Class, setTeam2Class] = useState('');\n\n    const {teamsInfo, teamsStats, isFetching} = useSelector(state => state.roomPage);\n\n    useEffect(() => {\n        if (roomId.length > 0) {\n            dispatch(getTeamsThunkCreator(roomId));\n        }\n    }, [dispatch, roomId]);\n\n    useEffect(() => {\n        if (teamsInfo && teamsStats) {\n            const team1Stats = teamsStats.teams[0].players;\n            const team2Stats = teamsStats.teams[1].players;\n            \n            setTeam1Roster(createArr(teamsInfo.teams.faction1.roster, team1Stats));\n            setTeam2Roster(createArr(teamsInfo.teams.faction2.roster, team2Stats));\n\n            setTeam1Class(setClassForTeam(0));\n            setTeam2Class(setClassForTeam(1));\n        }\n    // eslint-disable-next-line\n    }, [teamsInfo]);\n\n    const setClassForTeam = (i) => {\n        return classNames({\n            \"room__team\": true,\n            \"room__team-1\": i === 0,\n            \"room__team-2\": i === 1,\n            \"room__team-loser\": \n                Number.parseInt(teamsStats.teams[i === 0 ? 0 : 1].c5) < Number.parseInt(teamsStats.teams[i === 0 ? 1 : 0].c5),\n            \"room__team-winner\": \n                Number.parseInt(teamsStats.teams[i === 0 ? 0 : 1].c5) > Number.parseInt(teamsStats.teams[i === 0 ? 1 : 0].c5)\n        });\n    }\n\n    const createArr = (team, numTeamStats) => {\n        return (team.map((player, i) => {\n            return ( \n                <RoomPlayerItem \n                    key={player.id} \n                    setShowMatches={setShowMatches}\n                    player={player} \n                    i={i} \n                    numTeamStats={numTeamStats} \n                />\n            );\n        }))\n    };\n\n    const parseEndTime = (str) => {\n        const entTime = str.split('T');\n\n        return `${entTime[0].slice(0)} - ${entTime[1].slice(0, -4)}`;\n    }\n\n    if (isFetching && !teamsStats) {\n        return <Preloader />\n    }\n    if (teamsStats) {\n        return (        \n            <div className=\"room\">\n                <button className=\"btn room__btn\" onClick={() => setShowMatches(true)}>\n                    Show all matches\n                </button>\n                <div className=\"room__game-info\">\n                    <div className=\"room__map\">\n                        {teamsStats.i1}\n                    </div>\n                    <div className=\"room__score\">\n                        {teamsStats.teams[0].c5} - {teamsStats.teams[1].c5}\n                    </div>\n                    <div className=\"room__endtime\">\n                        {parseEndTime(teamsInfo.checkIn.endTime)}\n                    </div>\n                </div>\n                <div className=\"room__team-wrapper\">\n                    <div className=\"room__team-header\">\n                        <div className=\"room__team-name\">\n                            {teamsStats.teams[0].i5}\n                        </div>\n                        <div className=\"room__score-box\">\n                            <div className=\"room__score-half\">\n                                FIRST HALF SCORE: {teamsStats.teams[0].i3}\n                            </div>\n                            <div className=\"room__score-half\">\n                                SECOND HALF SCORE: {teamsStats.teams[0].i4}\n                            </div>\n                            <div className=\"room__score-half\">\n                                FINAL SCORE: {teamsStats.teams[0].c5}\n                            </div>\n                        </div>\n                    </div>\n                    <RoomCaptions />\n                    <div className={team1Class}>\n                        {team1Roster && team2Roster &&\n                            team1Roster\n                        }\n                    </div>\n                </div>\n                <div className=\"room__team-wrapper\">\n                    <div className=\"room__team-header\">\n                        <div className=\"room__team-name\">\n                            {teamsStats.teams[1].i5}\n                        </div>\n                        <div className=\"room__score-box\">\n                            <div className=\"room__score-half\">\n                                FIRST HALF SCORE: {teamsStats.teams[1].i3}\n                            </div>\n                            <div className=\"room__score-half\">\n                                SECOND HALF SCORE: {teamsStats.teams[1].i4}\n                            </div>\n                            <div className=\"room__score-half\">\n                                FINAL SCORE: {teamsStats.teams[1].c5}\n                            </div>\n                        </div>\n                    </div>\n                    <RoomCaptions />\n                    <div className={team2Class}>\n                        {team1Roster && team2Roster &&\n                            team2Roster\n                        }\n                    </div>\n                </div>          \n            </div>\n        );\n    }\n    return null;\n    \n}\n\nexport default CheckRoom;\n","import API from \"../../api/api\";\nimport {\n    GET_ROOM_REQUEST,\n\tGET_ROOM_SUCCESS,\n    GET_ROOM_FAILURE\n} from \"./consts\";\n\n// GET MATCHES LIST\n\nexport const getTeamsRequest = () => ({ type: GET_ROOM_REQUEST });\nexport const getTeamsSuccess = (teamsInfo, teamsStats) => ({\n\ttype: GET_ROOM_SUCCESS,\n\tteamsInfo,\n\tteamsStats\n});\nexport const getTeamsFailure = (error) => ({\n\ttype: GET_ROOM_FAILURE,\n\terror,\n});\n\nexport const getTeamsThunkCreator = (roomId) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getTeamsRequest());\n\n\t\ttry {\n\t\t\tconst teamsResponse = await API.GET_ELO(`match/v2/match/${roomId}`);\n\t\t\tconst teamsStatsResponse = await API.GET_ELO(`/stats/v1/stats/matches/${roomId}`);\n\n\t\t\tdispatch(getTeamsSuccess(teamsResponse.data.payload, teamsStatsResponse.data[0]));\n\t\t} catch (error) {\n\t\t\tdispatch(getTeamsFailure(error));\n\t\t}\n\t};\n};","export const GET_ROOM_REQUEST = \"GET_ROOM_REQUEST\";\nexport const GET_ROOM_SUCCESS = \"GET_ROOM_SUCCESS\";\nexport const GET_ROOM_FAILURE = \"GET_ROOM_FAILURE\";\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport classNames from 'classnames';\n\nimport { getPlayerIdThunkCreator } from '../../redux/player/actions';\nimport { getMatchesThunkCreator } from '../../redux/match/actions';\n\nimport Preloader from '../../components/Preloader/Preloader';\nimport PlayerCard from '../../components/PlayerCard/PlayerCard';\nimport MatchList from '../../components/MatchList/MatchList';\nimport MatchItem from '../../components/MatchItem/MatchItem';\nimport LineChart from '../../components/LineChart/LineChart';\nimport AvgStatItem from '../../components/AvgStatItem/AvgStatItem';\n\nimport { calcStatsForNGames, secToDate } from '../../assets/js/utils';\n\nimport '../../assets/scss/select.scss';\nimport Comparison from '../Comparison/Comparison';\nimport CheckRoom from '../CheckRoom/CheckRoom';\n\nfunction Main() {\n    const dispatch = useDispatch();\n\n    const {playerStats, isFetching, error} = useSelector(store => store.playerSearch);\n    const {allMatches, isFetching: matchFetching} = useSelector(store => store.matchesList);\n    const { playerAvatar,\n            skill_level,\n            faceit_elo,\n            nickname,\n            playerId\n        } = useSelector(store => store.playerSearch.playerInfo);\n    \n    const { search } = useLocation();   \n    const history = useHistory();\n    \n    // GLOBAL FETCHING\n    const [globalFetching, setGlobalFetching] = useState(false);\n\n    const [value, setValue] = useState('');\n    const [currentUrl, setCurrentUrl] = useState(null);\n\n    // Array of elements-matches\n    const [matchesArr, setMatchesArr] = useState([]);\n\n    const [eloArr, setEloArr] = useState([]);\n    // Array of match date\n    const [numsChart, setNumsChart] = useState([]);\n\n    const [listSize, setListSize] = useState(20);\n    const [maxElo, setMaxElo] = useState(0);\n\n    // Array of last matches\n    const [matches, setMatchesBySize] = useState(null);\n    \n    // Manage Components\n    const [showProfile, setProfile] = useState(true);\n    const [showChart, setShowChart] = useState(false);\n    const [showCompare, setShowCompare] = useState(false);\n\n    const [showMatches, setShowMatches] = useState(true);\n    const [matchId, setMatchId] = useState('');\n\n    const searchAndNickMatch = () => {\n        return nickname.toLowerCase() === currentUrl.toLowerCase();\n    } \n\n    // Get player info if url change\n    useEffect(() => {\n        if (search !== '') {\n            setGlobalFetching(true);\n        }\n    }, [search])\n\n    useEffect(() => {\n        const nicknamePURL = new URLSearchParams(search);\n        const currentNick = nicknamePURL.get(\"nickname\");\n\n        if (currentNick) {\n            if (currentNick !== currentUrl) {\n                setCurrentUrl(currentNick);\n            }\n            dispatch(getPlayerIdThunkCreator(currentNick));\n        }          \n    // eslint-disable-next-line\n    }, [dispatch, search]);    \n\n    // Get allMatches after getting player info\n    useEffect(() => {        \n        if (playerStats && !isFetching) {\n            dispatch(getMatchesThunkCreator(playerId, playerStats.m1));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, playerId]);\n\n\n    // Find max elo\n    useEffect(() => {\n        if (allMatches) {  \n            let maxEloArr = [];\n\n            for (let i = 0; i < allMatches.length; i += 1) {\n                maxEloArr[i] = Number.parseInt(allMatches[i].elo);\n            }\n            const maxEloReturn = maxEloArr.filter(item => !(Number.isNaN(item)) );\n            setMaxElo(Math.max(...maxEloReturn));\n        }\n    }, [allMatches])\n\n    // Slice allMatches\n    useEffect(() => {        \n        if (allMatches && !matchFetching) {\n            if (allMatches.length < listSize) {\n                setMatchesBySize(allMatches);\n            } else {\n                const newArrFull = [...allMatches];\n                setMatchesBySize(newArrFull.slice(0, listSize));\n            }\n        }\n    // eslint-disable-next-line\n    }, [allMatches, listSize]);\n\n    // Mapping matches list. Create DOM matches\n    useEffect(() => {        \n        if (matches && allMatches) {            \n            let eloArr = [];\n            let currentEloArr = [];\n            let nums = [];\n\n            for (let i = 0; i < listSize; i += 1) {\n                if (allMatches[i + 1]) {\n                    eloArr[i] = allMatches[i].elo - allMatches[i + 1].elo;\n                    if (allMatches[i].elo !== undefined) {\n                        currentEloArr[i] = allMatches[i].elo; \n                        nums[i] = secToDate(allMatches[i].created_at);\n                    } else {\n                        currentEloArr[i] = null; \n                        nums[i] = null;\n                    }\n                }\n            }\n\n            setEloArr(currentEloArr.filter(item => item !== null).reverse());\n            setNumsChart(nums.filter(item => item !== null).reverse());\n\n            const arrOfElMatches = matches.map((match, index) => {\n                return ( <MatchItem\n                    key={match.matchId + index}\n                    match={match}\n                    eloDif={eloArr[index]}\n                    setMatchId={setMatchId}\n                    setShowMatches={setShowMatches} \n                />)                \n            });\n\n            setMatchesArr(arrOfElMatches);\n        }\n    // eslint-disable-next-line\n    }, [listSize, matches]);\n\n    useEffect(() => {\n        if (matches) {\n            setGlobalFetching(false);\n        }\n    // eslint-disable-next-line\n    }, [matches])\n\n    const onClickHandler = (e) => {\n        e.preventDefault();\n\n        history.push({\n            pathname: '/faceit-metric/',\n            search: `?nickname=${value}`\n        });     \n\n        const nicknamePURL = new URLSearchParams(search);\n        const currentNick = nicknamePURL.get(\"nickname\");\n\n        if (currentNick) {\n            setShowMatches(true);\n            setCurrentUrl(currentNick)\n        }\n\n        setValue('');\n    }    \n\n    const onChangeHandler = (e) => {\n        setValue(e.target.value);\n    } \n\n    const onSizeChangeHandler = (e) => {\n        setListSize(Number.parseInt(e.target.value));\n    } \n\n    const setProfileComponent = () => {\n        setProfile(true)\n        setShowChart(false)\n        setShowCompare(false)\n    }\n    const setChartComponent = () => {\n        setProfile(false)\n        setShowChart(true)\n        setShowCompare(false)\n    }\n    const setComparisonComponent = () => {\n        setProfile(false)\n        setShowChart(false)\n        setShowCompare(true)\n    }\n\n    const btnNavClassProfile = classNames({\n        btn: true,\n        \"main__nav-btn\": true,\n        'main__nav-btn_active': showProfile,\n    });\n\n    const btnNavClassChart = classNames({\n        btn: true,\n        \"main__nav-btn\": true,\n        'main__nav-btn_active': showChart,\n    });\n\n    const btnNavClassCompare = classNames({\n        btn: true,\n        \"main__nav-btn\": true,\n        'main__nav-btn_active': showCompare,\n    });\n\n    return (\n        <main className=\"main\">\n            <div className=\"main__container container\">\n                <div className=\"main__info-box\">\n                    <form className=\"main__form\" onSubmit={onClickHandler}>\n                        <input\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                            type=\"text\" \n                            value={value}\n                            className=\"main__input\" \n                            placeholder=\"Enter nickname...\"\n                            onChange={onChangeHandler} \n                        />\n                        <button \n                            disabled={isFetching || matchFetching}\n                            type=\"submit\"\n                            className=\"main__btn-search btn\"\n                        >\n                            <FontAwesomeIcon icon={faSearch} />\n                        </button>\n                        <div className=\"select\">\n                            <select \n                                value={listSize} \n                                onChange={onSizeChangeHandler}\n                                className=\"main__select\" \n                            >\n                                <option value={10}>10</option>\n                                <option value={20}>20</option>\n                                <option value={30}>30</option>\n                                <option value={40}>40</option>\n                                <option value={50}>50</option>\n                                <option value={100}>100</option>\n                            </select>\n                       </div>\n                    </form>\n                    {playerStats && matches && !error && nickname &&  searchAndNickMatch()\n                    && !globalFetching\n                    && (<div className=\"main__nav-wrapper\">\n                        <button className={btnNavClassProfile} onClick={setProfileComponent}>\n                            Profile\n                        </button>\n                        <button className={btnNavClassChart} onClick={setChartComponent}>\n                            Chart\n                        </button>\n                        <button className={btnNavClassCompare} onClick={setComparisonComponent}>\n                            Compare\n                        </button>\n                    </div>)}\n                    {(globalFetching && !error && currentUrl) &&\n                    <Preloader />\n                    }\n                    {((!globalFetching && nickname && !searchAndNickMatch()) || error)\n                    && (<div>Player {currentUrl} not found</div>)}                    \n                    {showChart && playerStats && matches && !error\n                    && nickname && searchAndNickMatch() && !isFetching && !matchFetching\n                    && <LineChart eloArr={eloArr} numsChart={numsChart} />\n                    }\n                    {showProfile && playerStats && matches && !error && nickname && searchAndNickMatch()\n                    && !isFetching && !matchFetching\n                    &&(                    \n                    <div className=\"player-cards\">\n                        <PlayerCard\n                            maxElo={maxElo}\n                            nickname={nickname}\n                            avatar={playerAvatar}\n                            level={skill_level}\n                            elo={faceit_elo}\n                            matches={playerStats.m1}\n                            kd={playerStats.k5}\n                            hs={playerStats.k8}\n                            winRate={playerStats.k6}\n                        />\n                        <AvgStatItem\n                            gamesCount={allMatches.length < listSize ? allMatches.length : listSize}\n                            matches={calcStatsForNGames(matches)}\n                        />\n                    </div>\n                    )}\n                    {showCompare && <Comparison />}\n                </div>                \n                {matches && !error && nickname && searchAndNickMatch() && !isFetching\n                && !matchFetching && showMatches\n                && (\n                    <MatchList\n                        matches={matches}\n                        matchesArr={matchesArr}\n                    />               \n                )}\n                {!showMatches && matchId &&\n                    <CheckRoom \n                        roomId={matchId}\n                        setShowMatches={setShowMatches} \n                    />\n                }\n            </div>\n        </main>\n    );\n}\n\nexport default Main;\n","import API from \"../../api/api\";\nimport {\n    GET_MATCHES_LIST_REQUEST,\n    GET_MATCHES_LIST_SUCCESS,\n    GET_MATCHES_LIST_FAILURE\n} from \"./consts\";\n\n// GET MATCHES LIST\n\nexport const getMatchesRequest = () => ({ type: GET_MATCHES_LIST_REQUEST });\nexport const getMatchesSuccess = (allMatches) => ({\n\ttype: GET_MATCHES_LIST_SUCCESS,\n\tallMatches,\n});\nexport const getMatchesFailure = (error) => ({\n\ttype: GET_MATCHES_LIST_FAILURE,\n\terror,\n});\n\nexport const getMatchesThunkCreator = (playerId, matchesCount) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getMatchesRequest());\n\n\t\ttry {\n\t\t\tconst allMatchesResopnse = await API.GET_ELO(`stats/api/v1/stats/time/users/${playerId}/games/csgo?size=${matchesCount}`);\n\n\t\t\tdispatch(getMatchesSuccess(allMatchesResopnse.data));\n\t\t} catch (error) {\n\t\t\tdispatch(getMatchesFailure(error));\n\t\t}\n\t};\n};","export const GET_MATCHES_LIST_REQUEST = \"GET_MATCHES_LIST_REQUEST\";\nexport const GET_MATCHES_LIST_SUCCESS = \"GET_MATCHES_LIST_SUCCESS\";\nexport const GET_MATCHES_LIST_FAILURE = \"GET_MATCHES_LIST_FAILURE\";\n\n\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Main from '../pages/Main/Main';\nimport CheckRoom from '../pages/CheckRoom/CheckRoom';\n\nfunction AppRouter() {\n\treturn (\n        <Switch>\n            <Route exact path=\"/faceit-metric/\" component={Main} />\n            <Route exact path=\"/faceit-metric/room\" component={CheckRoom} />\n        </Switch>\n\t);\n}\n\nexport default AppRouter;\n","import React from 'react';\n\nimport './assets/scss/main.scss';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport AppRouter from './route/AppRouter';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<AppRouter />\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    GET_SEARCH_RESULT_SUCCESS,\n    GET_SEARCH_RESULT_REQUEST,\n\tGET_SEARCH_RESULT_FAILURE,\n\tGET_COMPARISON_LIST_REQUEST,\n\tGET_COMPARISON_LIST_SUCCESS,\n\tGET_COMPARISON_LIST_FAILURE\n} from \"./consts\";\n  \nconst initialState = {\n\tplayerStats: null,\n\tplayerInfo: {\n\t\tplayerAvatar: '',\n\t\tskill_level: '',\n\t\tfaceit_elo: '',\n\t\tnickname: '',\n\t\tplayerId: null\n\t},\n\tcomparisonPlayers: null,  \n\tisFetching: false,\n\terror: null\n};\n  \nconst playerReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_SEARCH_RESULT_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerStats: null,\n\t\t\t\tplayerInfo: {\n\t\t\t\t\tnickname: null, \n\t\t\t\t\tplayerId: null\n\t\t\t\t},\n\t\t\t\tisFetching: true\n\t\t\t};\n\t\tcase GET_SEARCH_RESULT_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerStats: action.playerStats,\n\t\t\t\tplayerInfo: action.playerInfo,\n\t\t\t\terror: null,\n\t\t\t\tisFetching: false\n\t\t\t};\t\t\n\t\tcase GET_SEARCH_RESULT_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// playerStats: null,\n\t\t\t\t// playerInfo: {},\n\t\t\t\tisFetching: true\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcomparisonPlayers: action.comparisonPlayers,\n\t\t\t\tisFetching: false\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n  \n  export default playerReducer;\n  ","import {\n  GET_MATCHES_LIST_REQUEST,\n  GET_MATCHES_LIST_SUCCESS,\n  GET_MATCHES_LIST_FAILURE\n} from \"./consts\";\n  \nconst initialState = {\n  allMatches: null,\n  isFetching: false,\n  error: null\n};\n\nconst matchesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MATCHES_LIST_REQUEST:\n      return {\n        ...state,\n        allMatches: null,\n        isFetching: true,\n        error: null\n      };\n    case GET_MATCHES_LIST_SUCCESS:\n      return {\n        ...state,\n        allMatches: action.allMatches,\n        error: null,\n        isFetching: false\n      };\n    case GET_MATCHES_LIST_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n  \nexport default matchesReducer;\n  ","import {\n\tGET_ROOM_REQUEST,\n\tGET_ROOM_SUCCESS,\n\tGET_ROOM_FAILURE,\n} from \"./consts\";\n  \nconst initialState = {\n\tteamsInfo: null,\n\tteamsStats: null,\n\tisFetching: false,\n\terror: null\n};\n\nconst roomReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_ROOM_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tteamsInfo: null,\n\t\t\t\tteamsStats: null,\n\t\t\t\tisFetching: true,\n\t\t\t\terror: null\n\t\t\t};\n\t\tcase GET_ROOM_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tteamsInfo: action.teamsInfo,\n\t\t\t\tteamsStats: action.teamsStats,\n\t\t\t\terror: null,\n\t\t\t\tisFetching: false\n\t\t\t};\n\t\tcase GET_ROOM_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n  \nexport default roomReducer;\n  ","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport playerReducer from \"./player/reducer\";\nimport matchesReducer from \"./match/reducer\";\nimport roomReducer from \"./room/reducer\";\n\nconst reducers = combineReducers({\n    playerSearch: playerReducer,\n    matchesList: matchesReducer,\n    roomPage: roomReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\ndocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}