{"version":3,"sources":["components/Footer/Footer.jsx","components/Header/Header.jsx","api/instanceElo.js","api/api.js","redux/player/actions.js","redux/player/consts.js","components/Preloader/Preloader.jsx","components/PlayerCard/PlayerCard.jsx","components/MatchList/MatchList.jsx","assets/js/utils.js","components/MatchItem/MatchItem.jsx","components/AvgStatItem/AvgStatItem.jsx","pages/Main/Main.jsx","redux/match/actions.js","redux/match/consts.js","pages/Comparison/Comparison.jsx","route/AppRouter.jsx","App.js","serviceWorker.js","redux/player/reducer.js","redux/match/reducer.js","redux/redux-store.js","index.js"],"names":["Footer","className","target","rel","href","onClick","e","newPageUrl","preventDefault","window","open","onClickHandler","Header","to","instanceElo","axios","headers","baseURL","interceptors","request","use","config","response","error","status","console","toString","log","Promise","reject","path","get","getSearchResultSuccess","playerStats","playerInfo","type","getSearchResultFailure","getPlayerIdThunkCreator","nickname","dispatch","a","API","getUserIdBySearch","userId","data","payload","players","results","guid","userNickname","searchResponse","statResponse","playerAvatar","avatar","skill_level","games","csgo","faceit_elo","playerId","lifetime","Preloader","icon","faSpinner","PlayerCard","level","elo","matches","kd","hs","winRate","maxElo","bgColor","classNames","src","alt","MatchList","matchesArr","calcStatsForNGames","sumStats","kr","frags","winrate","size","length","i","Number","parseFloat","c2","c3","i6","c4","i10","toFixed","Math","floor","MatchItem","bgClass","map","team","score","assists","deaths","date","eloDif","matchId","secs","startTime","Date","setTime","getDate","getMonth","getHours","getMinutes","secToDate","isNaN","AvgStatItem","gamesCount","Main","useDispatch","useSelector","store","playerSearch","isFetching","matchesList","allMatches","matchFetching","search","useLocation","history","useHistory","useState","value","setValue","currentUrl","setCurrentUrl","setMatchesArr","listSize","setListSize","setMaxElo","setMatchesBySize","useEffect","currentNick","URLSearchParams","m1","matchesCount","allMatchesResopnse","getMatchesThunkCreator","newArr","slice","maxEloArr","parseInt","maxEloReturn","filter","item","max","eloArr","arrOfElMatches","match","index","match__item","key","i1","i5","i18","i7","i8","created_at","onSubmit","push","pathname","autoComplete","autoCorrect","spellCheck","placeholder","onChange","faSearch","defaultValue","toLowerCase","k5","k8","k6","Comparison","AppRouter","exact","component","App","Boolean","location","hostname","initialState","comparisonPlayers","playerReducer","state","action","matchesReducer","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c110bd1e.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../../assets/scss/footer.scss';\n\nfunction Footer() {\n    const onClickHandler = (e, newPageUrl) => {\n        e.preventDefault();\n        window.open(newPageUrl, \"_blank\")\n    }\n    return (\n        <footer className=\"footer\">\n            <div>\n                by&nbsp;\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://vk.com/iph9x\" \n                onClick={(e) => onClickHandler(e, 'https://vk.com/iph9x')}>\n                    Ivan\n                </a>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../assets/scss/header.scss';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header__container\">\n                <Link to=\"/faceit-metric/\"><h1>FACEIT METRIC</h1></Link>\n                <nav className=\"nav\">\n                    <Link to=\"/faceit-metric/\">Results</Link>\n                    <Link to=\"/faceit-metric/compare\">Compare</Link>\n                </nav>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import * as axios from \"axios\";\n\nconst API_URL= \"https://api.faceit.com/\";\n// https://api.faceit.com/core/v1/nicknames/IPhoenix9\n// stats/api/v1/stats/time/users/\nconst instanceElo = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: API_URL,\n});\n\ninstanceElo.interceptors.request.use((config) => {  \n  return config;\n});\n\ninstanceElo.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const status = error.response ? error.response.status : 408;\n    if (status >= 500) {\n      window.console.error(error.toString());\n    }\n    if (status === 401) {\n      window.console.log(\"logout\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instanceElo;\n","import instanceElo from \"./instanceElo\";\n// import instanceAuth from \"./instanceAuth\";\n\nexport default {\n  // GET_V4(path) {\n  //   return instanceAuth.get(path);\n  // },\n  GET_ELO(path) {\n    return instanceElo.get(path);\n  }\n};\n","import API from \"../../api/api\";\nimport {\n    GET_SEARCH_RESULT_SUCCESS,\n    GET_SEARCH_RESULT_REQUEST,\n\tGET_SEARCH_RESULT_FAILURE,\n\tGET_COMPARISON_LIST_REQUEST,\n\tGET_COMPARISON_LIST_SUCCESS,\n\tGET_COMPARISON_LIST_FAILURE\n} from \"./consts\";\n\n// GET SEARCH RESULT\n\nexport const getSearchResultRequest = () => ({ type: GET_SEARCH_RESULT_REQUEST });\nexport const getSearchResultSuccess = (playerStats, playerInfo) => ({\n\ttype: GET_SEARCH_RESULT_SUCCESS,\n\tplayerStats,\n\tplayerInfo\n});\nexport const getSearchResultFailure = (error) => ({\n\ttype: GET_SEARCH_RESULT_FAILURE,\n\terror,\n});\n\nexport const getPlayerIdThunkCreator = (nickname) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getSearchResultRequest());\n\n\t\ttry {\n\t\t\tconst getUserIdBySearch = await API.GET_ELO(`search/v1?limit=1&query=${nickname}`);\n\t\t\tconst userId = getUserIdBySearch.data.payload.players.results[0].guid;\n\t\t\tconst userNickname = getUserIdBySearch.data.payload.players.results[0].nickname;\n\n\t\t\tconst searchResponse = await API.GET_ELO(`core/v1/nicknames/${userNickname}`);\n\t\t\t\t\n\t\t\tconst statResponse = await API.GET_ELO(`stats/v1/stats/users/${userId}/games/csgo`);\n\t\t\tconst playerStats = searchResponse.data.payload;\n\n\t\t\tconst playerInfo = {\n\t\t\t\tplayerAvatar: playerStats.avatar,\n\t\t\t\tskill_level: playerStats.games.csgo.skill_level,\n\t\t\t\tfaceit_elo: playerStats.games.csgo.faceit_elo,\n\t\t\t\tnickname: userNickname,\n\t\t\t\tplayerId: userId\n\t\t\t};\n\t\t\tdispatch(getSearchResultSuccess(statResponse.data.lifetime, playerInfo));\n\n\n\t\t} catch (error) {\n\t\t\tdispatch(getSearchResultFailure(error));\n\t\t}\n\t};\n};\n\n// SET COMPARISON OBJ\n\nexport const setComparisonPlayersRequest = () => ({ type: GET_COMPARISON_LIST_REQUEST });\nexport const setComparisonPlayersSuccess = (comparisonPlayers) => ({\n\ttype: GET_COMPARISON_LIST_SUCCESS,\n\tcomparisonPlayers\n});\nexport const setComparisonPlayersFailure = (error) => ({\n\ttype: GET_COMPARISON_LIST_FAILURE,\n\terror,\n});\n\nexport const setComparisonPlayersThunkCreator = (comparisonPlayers) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getSearchResultRequest());\n\t\ttry {\t\t\n\t\t\tdispatch(getSearchResultSuccess(comparisonPlayers));\n\t\t} catch (error) {\n\t\t\tdispatch(getSearchResultFailure(error));\n\t\t}\n\t};\n};","export const GET_SEARCH_RESULT_SUCCESS = \"GET_SEARCH_RESULT_SUCCESS\";\nexport const GET_SEARCH_RESULT_REQUEST = \"GET_SEARCH_RESULT_REQUEST\";\nexport const GET_SEARCH_RESULT_FAILURE = \"GET_SEARCH_RESULT_FAILURE\";\n\nexport const GET_COMPARISON_LIST_REQUEST = \"GET_COMPARISON_LIST_REQUEST\";\nexport const GET_COMPARISON_LIST_SUCCESS = \"GET_COMPARISON_LIST_SUCCESS\";\nexport const GET_COMPARISON_LIST_FAILURE = \"GET_COMPARISON_LIST_FAILURE\";","import React from 'react';\n\nimport '../../assets/scss/preloader.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nfunction Preloader() {\n    return (\n        <div className=\"preloader-wrapper\">\n            <div className=\"preloader\">\n                <FontAwesomeIcon icon={faSpinner} />\n            </div>\n        </div>\n    );\n}\n\nexport default Preloader;\n","import React from 'react';\n\nimport classNames from 'classnames';\n\n\nfunction PlayerCard({nickname, avatar, level, elo, matches, kd, hs, winRate, maxElo}) {\n    const bgColor = classNames({\n        'player-card__bg': true,\n        'player-card__bg_red': level === 10,\n        'player-card__bg_orange': level >= 8 && level <= 9,\n        'player-card__bg_yellow': level >= 4 && level <= 7,\n        'player-card__bg_green': level >= 2 && level <= 3,\n        'player-card__bg_white': level === 1\n    });\n    return (<>    \n        <div className=\"player-card player-card__avatar-box\">\n            <div className=\"player-card__nickname\">{nickname}</div>\n            <div className={bgColor}>.</div>\n            <img className=\"player-card__avatar\"  src={avatar} alt=\"\"/>\n        </div>\n        <div className=\"player-card player-card__alltime-box\">\n            <div className=\"player-card__avg-title\">\n                Statistic for alltime\n            </div>\n            <div className=\"player-card__stat-box\">\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Level: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {level}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Elo: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {elo}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        Max Elo: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {maxElo}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        matches: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {matches}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/D Ratio: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kd}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg hs:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {hs}%\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        win rate: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {winRate}%\n                    </div>\n                </div>\n            </div>\n        </div>       \n    </>\n    );\n}\n\nexport default PlayerCard;\n","import React from 'react';\n\nfunction MatchList({\n    matches,\n    matchesArr\n}) {\n    return (       \n        <div className=\"match__wrapper\">\n            {matches && (\n                <div className=\"match__item-titles\">\n                    <div>map</div>\n                    <div>team</div>\n                    <div>score</div>\n                    <div>kd</div>\n                    <div>hs %</div>\n                    <div>k - a - d</div>\n                    <div>date</div>\n                    <div>elo</div>\n                </div>\n            )}\n            {matches && matchesArr}\n        </div>           \n    );\n}\n\nexport default MatchList;\n","export const secToDate = (secs) => {\n    const startTime = new Date(null); \n    startTime.setTime(secs);\n    const outString = `\n        ${startTime.getDate() < 10 ? `0${startTime.getDate()}` : startTime.getDate()}.${startTime.getMonth() < 10 ? `0${startTime.getMonth() + 1}` : startTime.getMonth() + 1} -\n        ${startTime.getHours() < 10 ? `0${startTime.getHours()}` : startTime.getHours()}:${startTime.getMinutes() < 10 ? `0${startTime.getMinutes()}` : startTime.getMinutes()}`;\n    return outString;\n}\n\nexport const calcStatsForNGames = (matches) => {\n    let sumStats = {\n        kd: 0,\n        kr: 0,\n        hs: 0,\n        frags: 0,\n        winrate: 0,\n    };\n\n    const size = matches.length;\n\n    for (let i = 0; i < size; i += 1) {\n        sumStats.kd += Number.parseFloat(matches[i].c2);\n        sumStats.kr += Number.parseFloat(matches[i].c3);\n        sumStats.frags += Number.parseFloat(matches[i].i6);\n        sumStats.hs += Number.parseFloat(matches[i].c4);\n        sumStats.winrate += Number.parseFloat(matches[i].i10);\n    }\n    let avgStats = {\n        kd: Number.parseFloat((sumStats.kd / size).toFixed(2)),\n        kr: Number.parseFloat((sumStats.kr / size).toFixed(2)),\n        hs: Math.floor(sumStats.hs / size),\n        frags: Math.floor(sumStats.frags / size),\n        winrate: Math.floor(sumStats.winrate / size * 100) ,\n    }\n    return avgStats;\n}","import React from 'react';\n\nimport { secToDate } from '../../assets/js/utils';\n\nfunction MatchItem({\n    bgClass,\n    map,\n    team,\n    score,\n    kd,\n    hs,\n    frags,\n    assists,\n    deaths,\n    date,\n    eloDif,\n    elo,\n    matchId\n}) {\n    const onClickHandler = (e, newPageUrl) => {\n        e.preventDefault();\n        window.open(newPageUrl, \"_blank\")\n    }\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"faceit.com\" \n        onClick={(e) => onClickHandler(e, `https://www.faceit.com/ru/csgo/room/${matchId}/scoreboard`)}>\n            <div className={bgClass}>\n                <div>{map}</div>\n                <div>{team}</div>\n                <div>{score}</div>\n                <div>{kd}</div>\n                <div>{hs}</div>\n                <div>{`${frags} - ${assists} - ${deaths}`}</div>\n                <div>{secToDate(date)}</div>\n                <div>{`${elo} ${eloDif ? `(${Number.isNaN(eloDif) ? \"+0\" : (eloDif > 0 ? `+${eloDif}` : eloDif)})` : `` }`}</div>\n            </div>\n        </a>\n    );\n}\n\nexport default MatchItem;\n","import React from 'react';\n\nfunction AvgStatItem ({matches, gamesCount}) {\n    const {kd, kr, hs, frags, winrate} = matches;\n\n    return (    \n        <div className=\"player-card player-card__avg-box\">\n            <div className=\"player-card__avg-title\">\n                Statistic for {gamesCount} games\n            </div>\n            <div className=\"player-card__stat-box\">\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg frags: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {frags}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/D: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kd}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        K/R: \n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {kr}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        avg hs:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {hs}\n                    </div>\n                </div>\n                <div className=\"player-card__string\">\n                    <div className=\"player-card__prefix\">\n                        win rate:\n                    </div>\n                    <div className=\"player-card__postfix\">\n                        {winrate}%\n                    </div>\n                </div>\n                \n            </div>\n        </div>             \n    );\n}\n\nexport default AvgStatItem;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getPlayerIdThunkCreator } from '../../redux/player/actions';\nimport { getMatchesThunkCreator } from '../../redux/match/actions';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\n\nimport Preloader from '../../components/Preloader/Preloader';\nimport PlayerCard from '../../components/PlayerCard/PlayerCard';\n\nimport MatchList from '../../components/MatchList/MatchList';\nimport MatchItem from '../../components/MatchItem/MatchItem';\n\nimport { calcStatsForNGames } from '../../assets/js/utils';\nimport AvgStatItem from '../../components/AvgStatItem/AvgStatItem';\n\nimport '../../assets/scss/select.scss';\n\nfunction Main() {\n    const dispatch = useDispatch();\n\n    const {playerStats, isFetching, error} = useSelector(store => store.playerSearch);\n    const {allMatches, isFetching: matchFetching} = useSelector(store => store.matchesList);\n    const {playerAvatar, skill_level, faceit_elo, nickname, playerId} = useSelector(store => store.playerSearch.playerInfo);\n    \n    const { search } = useLocation();   \n    const history = useHistory();\n\n    const [value, setValue] = useState('');\n    const [currentUrl, setCurrentUrl] = useState('');\n\n    // Array of elements-matches\n    const [matchesArr, setMatchesArr] = useState([]);\n\n    const [listSize, setListSize] = useState(20);\n    const [maxElo, setMaxElo] = useState(0);\n\n    // Array of last matches\n    const [matches, setMatchesBySize] = useState(null);\n\n\n    // Get player info if url change\n    useEffect(() => {\n        const nicknamePURL = new URLSearchParams(search);\n        const currentNick = nicknamePURL.get(\"nickname\");\n\n        if (currentNick) {\n            setCurrentUrl(currentNick)\n            dispatch(getPlayerIdThunkCreator(currentNick));\n        }       \n    }, [dispatch, search]);    \n\n    // Get allMatches after getting player info\n    useEffect(() => {\n        if (playerId && playerStats.m1) {\n            dispatch(getMatchesThunkCreator(playerId, playerStats.m1));\n        }\n    }, [dispatch, playerId, playerStats]);\n\n    // Slice allMatches\n    useEffect(() => {\n        if (allMatches) {\n            if (allMatches.length < listSize) {\n                setListSize(allMatches.length);\n                setMatchesBySize(allMatches);\n            } else {\n                const newArrFull = [...allMatches];\n                const newArr = newArrFull.slice(0, listSize);\n    \n                setMatchesBySize(newArr);\n            }\n\n        }\n    }, [allMatches, listSize]);\n\n    // Find max elo\n    // Mapping matches list\n    useEffect(() => {\n        \n        let maxEloArr = [];\n        if (matches && allMatches) {\n\n            for (let i = 0; i < allMatches.length; i += 1) {\n                maxEloArr[i] = Number.parseInt(allMatches[i].elo);\n            }\n            const maxEloReturn = maxEloArr.filter(item => !(Number.isNaN(item)) );\n            setMaxElo(Math.max(...maxEloReturn));\n        }\n        if (matches && allMatches) {\n            let eloArr = [];\n            \n            for (let i = 0; i < listSize; i += 1) {\n                if (allMatches[i + 1]) {\n                    eloArr[i] = allMatches[i].elo - allMatches[i + 1].elo;\n                }\n            }           \n\n            const arrOfElMatches = matches.map((match, index) => {\n                const bgClass = classNames({\n                    match__item: true,\n                    'match__win': match.i10 === '1',\n                    'match__lose': match.i10 === '0'\n                });\n                \n                return ( <MatchItem\n                    key={match.matchId}\n                    matchId={match.matchId}\n                    bgClass={bgClass}\n                    map={match.i1}\n                    team={match.i5}\n                    score={match.i18}\n                    kd={match.c2}\n                    hs={match.c4}\n                    frags={match.i6}\n                    assists={match.i7}\n                    deaths={match.i8}\n                    date={match.created_at}\n                    elo={match.elo}\n                    eloDif={eloArr[index]}\n                />)                \n            });\n\n            setMatchesArr(arrOfElMatches);\n        }\n    // eslint-disable-next-line\n    }, [allMatches, listSize, matches])\n\n    const clickHandler = (e) => {\n        e.preventDefault();\n\n        history.push({\n            pathname: '/faceit-metric/',\n            search: `?nickname=${value}`\n        });     \n\n        const nicknamePURL = new URLSearchParams(search);\n        const currentNick = nicknamePURL.get(\"nickname\");\n\n        if (currentNick) {\n            setCurrentUrl(currentNick)\n            dispatch(getPlayerIdThunkCreator(currentNick));\n        }\n\n        setValue('');\n    }    \n\n    const onChangeHandler = (e) => {\n        setValue(e.target.value);\n    } \n\n    const onSizeChangeHandler = (e) => {\n        setListSize(Number.parseInt(e.target.value));\n    } \n\n    return (\n        <main className=\"main\">\n            <div className=\"main__container container\">\n                <div className=\"main__info-box\">\n                    <form className=\"main__form\" onSubmit={clickHandler}>\n                        <input\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                            type=\"text\" \n                            value={value}\n                            className=\"main__input\" \n                            placeholder=\"Enter nickname...\"\n                            onChange={onChangeHandler} \n                        />\n                        <button type=\"submit\" className=\"main__btn-search btn\">\n                            <FontAwesomeIcon icon={faSearch} />\n                        </button>\n                        <div className=\"select\">\n                            <select defaultValue={listSize} onChange={onSizeChangeHandler} className=\"main__select\" >\n                                <option value={10}>10</option>\n                                <option value={20}>20</option>\n                                <option value={30}>30</option>\n                                <option value={40}>40</option>\n                                <option value={50}>50</option>\n                                <option value={100}>100</option>\n                            </select>\n                       </div>\n                    </form>\n                    {!isFetching && currentUrl && nickname && (error && nickname.toLowerCase() !== currentUrl.toLowerCase()) \n                    && (<div>Player {currentUrl} not found</div>)}\n                    \n                    {(isFetching || matchFetching) &&\n                    <Preloader />\n                    }\n                    <div className=\"player-cards\">\n                        {playerStats && !error && currentUrl && !isFetching && !matchFetching && nickname.toLowerCase() === currentUrl.toLowerCase() \n                        &&(                    \n                        <PlayerCard\n                            maxElo={maxElo}\n                            nickname={nickname}\n                            avatar={playerAvatar}\n                            level={skill_level}\n                            elo={faceit_elo}\n                            matches={playerStats.m1}\n                            kd={playerStats.k5}\n                            hs={playerStats.k8}\n                            winRate={playerStats.k6}\n                        />\n                        )}\n                        {matches && !error && currentUrl && !isFetching && !matchFetching && nickname.toLowerCase() === currentUrl.toLowerCase() \n                        && (                    \n                        <AvgStatItem\n                            gamesCount={listSize}\n                            matches={calcStatsForNGames(matches)}\n                        />\n                        )}\n                    </div>\n                </div>                \n                {matches && !error && currentUrl && !isFetching && !matchFetching && nickname.toLowerCase() === currentUrl.toLowerCase() \n                && (\n                    <MatchList\n                        matches={matches}\n                        matchesArr={matchesArr}\n                    />               \n                )}\n            </div>\n        </main>\n    );\n}\n\nexport default Main;\n","import API from \"../../api/api\";\nimport {\n    GET_MATCHES_LIST_REQUEST,\n    GET_MATCHES_LIST_SUCCESS,\n    GET_MATCHES_LIST_FAILURE\n} from \"./consts\";\n\n// GET MATCHES LIST\n\nexport const getMatchesRequest = () => ({ type: GET_MATCHES_LIST_REQUEST });\nexport const getMatchesSuccess = (allMatches) => ({\n\ttype: GET_MATCHES_LIST_SUCCESS,\n\tallMatches,\n});\nexport const getMatchesFailure = (error) => ({\n\ttype: GET_MATCHES_LIST_FAILURE,\n\terror,\n});\n\nexport const getMatchesThunkCreator = (playerId, matchesCount) => {\n\treturn async (dispatch) => {\n\t\tdispatch(getMatchesRequest());\n\n\t\ttry {\n\t\t\tconst allMatchesResopnse = await API.GET_ELO(`stats/api/v1/stats/time/users/${playerId}/games/csgo?size=${matchesCount}`);\n\n\t\t\tdispatch(getMatchesSuccess(allMatchesResopnse.data));\n\t\t} catch (error) {\n\t\t\tdispatch(getMatchesFailure(error));\n\t\t}\n\t};\n};","export const GET_MATCHES_LIST_REQUEST = \"GET_MATCHES_LIST_REQUEST\";\nexport const GET_MATCHES_LIST_SUCCESS = \"GET_MATCHES_LIST_SUCCESS\";\nexport const GET_MATCHES_LIST_FAILURE = \"GET_MATCHES_LIST_FAILURE\";\n\n\n\n","import React  from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../assets/scss/comparison.scss';\n\nfunction Comparison() {\n    const { nickname, playerId } = useSelector(store => store.playerSearch.playerInfo);\n\n    return (\n        <section className=\"main\">\n            <div className=\"container\">\n                <div className=\"comparison\">\n                    <div>\n                        {playerId}\n                    </div>\n                    <div>\n                        {nickname}\n                    </div>\n                    so far empty :(\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Comparison;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Main from '../pages/Main/Main';\nimport Comparison from '../pages/Comparison/Comparison';\n\nfunction AppRouter() {\n\treturn (\n        <Switch>\n            <Route exact path=\"/faceit-metric/\" component={Main} />\n            <Route exact path=\"/faceit-metric/compare\" component={Comparison} />\n        </Switch>\n\t);\n}\n\nexport default AppRouter;\n","import React from 'react';\n\nimport './assets/scss/main.scss';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport AppRouter from './route/AppRouter';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<AppRouter />\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    GET_SEARCH_RESULT_SUCCESS,\n    GET_SEARCH_RESULT_REQUEST,\n\tGET_SEARCH_RESULT_FAILURE,\n\tGET_COMPARISON_LIST_REQUEST,\n\tGET_COMPARISON_LIST_SUCCESS,\n\tGET_COMPARISON_LIST_FAILURE\n} from \"./consts\";\n  \nconst initialState = {\n\tplayerStats: null,\n\tplayerInfo: {\n\t\tplayerAvatar: '',\n\t\tskill_level: '',\n\t\tfaceit_elo: '',\n\t\tnickname: '',\n\t\tplayerId: null\n\t},\n\tcomparisonPlayers: null,  \n\tisFetching: false,\n\terror: null\n};\n  \nconst playerReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_SEARCH_RESULT_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerStats: null,\n\t\t\t\tplayerInfo: {},\n\t\t\t\tisFetching: true\n\t\t\t};\n\t\tcase GET_SEARCH_RESULT_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerStats: action.playerStats,\n\t\t\t\tplayerInfo: action.playerInfo,\n\t\t\t\terror: null,\n\t\t\t\tisFetching: false\n\t\t\t};\t\t\n\t\tcase GET_SEARCH_RESULT_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerStats: null,\n\t\t\t\tplayerInfo: {},\n\t\t\t\tisFetching: true\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcomparisonPlayers: action.comparisonPlayers,\n\t\t\t\tisFetching: false\n\t\t\t};\n\t\tcase GET_COMPARISON_LIST_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n  \n  export default playerReducer;\n  ","import {\n  GET_MATCHES_LIST_REQUEST,\n  GET_MATCHES_LIST_SUCCESS,\n  GET_MATCHES_LIST_FAILURE\n} from \"./consts\";\n  \nconst initialState = {\n  allMatches: null,\n  isFetching: false,\n  error: null\n};\n\nconst matchesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MATCHES_LIST_REQUEST:\n      return {\n        ...state,\n        allMatches: null,\n        isFetching: true,\n        error: null\n      };\n    case GET_MATCHES_LIST_SUCCESS:\n      return {\n        ...state,\n        allMatches: action.allMatches,\n        error: null,\n        isFetching: false\n      };\n    case GET_MATCHES_LIST_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n  \nexport default matchesReducer;\n  ","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport playerReducer from \"./player/reducer\";\nimport matchesReducer from \"./match/reducer\";\n\nconst reducers = combineReducers({\n    playerSearch: playerReducer,\n    matchesList: matchesReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\ndocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}